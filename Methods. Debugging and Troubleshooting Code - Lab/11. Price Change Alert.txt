using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _11.Price_Change_Alert
{
    class Program
    {
        static void Main()
        {
            int n = int.Parse(Console.ReadLine());



            double threshold = double.Parse(Console.ReadLine());


            double prevPrice = double.Parse(Console.ReadLine());

            for (int i = 0; i < n - 1; i++)
            {
                double currentPrice = double.Parse(Console.ReadLine());
                double diff = GetDifference(prevPrice, currentPrice);
                bool isSignificantDifference = IsSignificant(diff, threshold);



                string result = GetResult(currentPrice, prevPrice, diff, isSignificantDifference);
                Console.WriteLine(result);

                prevPrice = currentPrice;
            }
        }

        private static string GetResult(double currentPrice, double prevPrice, double difference, bool IsSignificant)
        {
            string result = "";
            if (difference == 0)
            {
                result = string.Format("NO CHANGE: {0}", currentPrice);
            }
            else if (!IsSignificant)
            {
                result = string.Format("MINOR CHANGE: {0} to {1} ({2:F2}%)", prevPrice, currentPrice, difference*100);
            }
            else if (IsSignificant && (difference > 0))
            {
                result = string.Format("PRICE UP: {0} to {1} ({2:F2}%)", prevPrice, currentPrice, difference*100);
            }
            else if (IsSignificant && (difference < 0))
                result = string.Format("PRICE DOWN: {0} to {1} ({2:F2}%)", prevPrice, currentPrice, difference*100);
            return result;
        }
        private static bool IsSignificant(double difference, double threshold)
        {
            if (Math.Abs(difference) >= threshold)
            {
                return true;
            }
            return false;
        }

        private static double GetDifference(double prevPrice, double currentPrice)
        {
            double result = (currentPrice - prevPrice) / prevPrice;
            return result;
        }
    }
}
